{"version":3,"sources":["webpack:///./src/app/fake.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAA0C;AAEN;AAEA;AACN;AACE;AACE;AAElC,IAAM,SAAS,GAAW,oBAAoB,CAAC;AAG/C;IAEE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,8BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,SAAS,CAAC;aACd,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,KAAK,EAAjB,CAAiB,CAAC;aAC9B,KAAK,CAAC,UAAC,KAAU,IAAK,0DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAC3D,CAAC;IAVH;QAAC,wFAAU,EAAE;;mBAAA;IAYb,kBAAC;;AAAD,CAAC;;;;;;;;ACvBD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN0E;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACTH;AAEL;AAO5C;IAGE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,+BAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aACxB,SAAS,CACR,eAAK;YACH,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CACF,CAAC;IACN,CAAC;IAjBH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAkC;SACnC,CAAC;;oBAAA;IAcF,mBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACtBwD;AACjB;AACI;AACF;AAEC;AAEG;AAgB9C;IAAA;IAAyB,CAAC;IAd1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;aACX;YACD,SAAS,EAAE;gBACT,kEAAW;aACZ;YACD,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;ACvB1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,mB;;;;;;;ACAA,uWAAuW,yBAAyB,cAAc,2BAA2B,iBAAiB,2BAA2B,kBAAkB,2D","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Http } from '@angular/http';\n\nimport { Observable } from 'rxjs/Rx'\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw'\n\nconst BOOKS_API: string = \"./assets/data.json\";\n\n@Injectable()\nexport class FakeService {\n\n  constructor(private http: Http) { }\n\n  getBooks(): Observable<any[]>{\n    return this.http\n      .get(BOOKS_API)\n      .map(resp => resp.json().books)\n      .catch((error: any) => Observable.throw(error.json()));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/fake.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 350;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 350\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\n\nimport { FakeService } from './fake.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  books: any [];\n\n  constructor(private fakeService: FakeService) { }\n\n  ngOnInit() {\n    this.fakeService.getBooks()\n      .subscribe(\n        books => {\n          this.books = books;\n        }\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { FakeService} from './fake.service';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n    FakeService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 516\n// module chunks = 1","module.exports = \"<h1>Book data from the Fake REST API</h1>\\n<div *ngIf=\\\"books\\\">\\n  <table class=\\\"pure-table pure-table-bordered\\\">\\n      <thead>\\n          <tr>\\n              <th>Book Id</th>\\n              <th>Book Title</th>\\n              <th>Author Name</th>\\n          </tr>\\n      </thead>\\n      <tbody>\\n          <tr *ngFor=\\\"let book of books;\\\">\\n              <td>{{book.book_id}}</td>\\n              <td>{{book.book_title}}</td>\\n              <td>{{book.author_name}}</td>\\n          </tr>\\n      </tbody>\\n  </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 517\n// module chunks = 1"],"sourceRoot":""}